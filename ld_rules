#!/bin/bash
#
# 2021-11-14 J.Nider

#---------------------------
# link .o files to .elf file
#
# Depends on: LD linker name
#
function rule_link()
{
   local target=$1
	local flags=${2:-$LDFLAGS}

   local root=${target%.*}
   local suffix=${target##$root}
   [[ "$suffix" == ".elf" ]] || return -1

	# make sure the linker is set
	[ $LD ] || {
		echo "${FUNCNAME[0]}: 'LD' variable must be set to the name of the linker"
		exit
	}

   echo "Linking $target"

	# first, check the 'objects' array for explicit input files. If that doesn't
	# exist, fall back to the dependencies list.
	if [[ -v ${objects[$target]} ]]; then
		local -n objs=${objects[$target]}
	else
		_deps_of $target objs
		echo "Deps: ${objs[@]}"
		if [[ -v $objs ]]; then
			echo "You have not specified any input files to be linked for target $target"
		fi
	fi

	local cmd="$LD $flags ${objs[@]} $LDLIBS -o $target"
   [ $__verbose ] && echo $cmd
   $cmd
}
