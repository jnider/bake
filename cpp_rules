#!/bin/bash
#
# 2021-11-14 J.Nider

realpath=$(readlink -f $0) # in case 'bake' was executed from a symbolic link
path=${realpath%/*} # full path of 'bake' script (minus the script name)
source $path/ld_rules

#---------------------------
# compile .cpp file to .o file
#
# Depends on: CXX compiler name
# Optional: CXXFLAGS additional flags to pass to compiler
#				SRC_PATH full path to source file
#				DST_PATH full path to destination file
#
function rule_compile_cpp()
{
   local target=$1
	local flags=${2:-$CXXFLAGS}
   local root=${target%.o}
   local suffix=${target##$root}
	local source=$root.cpp

	local srcfile
	[ $SRC_PATH ] && srcfile=$SRC_PATH/
	srcfile+=$source

	local dstfile
	[ $DST_PATH ] && dstfile=$DST_PATH/
	dstfile+=$target

   [[ "$suffix" == ".o" ]] && [[ -f "$srcfile" ]] || return -1

	# make sure the compiler is set
	[ $CXX ] || {
		echo "${FUNCNAME[0]}: 'CXX' variable must be set to the name of the compiler"
		exit
	}

   echo "Compiling $source to $target"

	local cmd="$CXX $flags -c $srcfile -o $dstfile" 
   [ $__verbose ] && echo $cmd
   $cmd
}
