#!/bin/bash
#
# 2020-02-15 J.Nider

realpath=$(readlink -f $0) # in case 'bake' was executed from a symbolic link
path=${realpath%/*} # full path of 'bake' script (minus the script name)

# include the linker rules automatically for convenience
source $path/ld_rules

#---------------------------
# compile .c file to .o file
#
# Depends on: CC compiler name
# Optional: 'flags' additional flags to pass to compiler, or CFLAGS global
#
function rule_compile_c()
{
	local target=$1
	local flags=${2:-$CFLAGS}
	local root=${target%.o}
	local suffix=${target##$root}
	local srcfile
	[[ $SRC_PATH ]] && srcfile=$SRC_PATH/
	srcfile+=$root.c

	[[ "$suffix" == ".o" ]] && [[ -f "$srcfile" ]] || return -1

	# make sure the compiler is set
	[[ $CC ]] || {
		echo "${FUNCNAME[0]}: 'CC' variable must be set to the name of the compiler"
		exit
	}

	echo "Compiling $root.c to $root.o"

	local dstfile
	[[ $DST_PATH ]] && dstfile=$DSTPATH/
	dstfile+=$root.o

	local cmd="$CC $flags -c $srcfile -o $target"
	[[ $__verbose ]] && echo $cmd
	$cmd
}
